<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace 的值为 dao接口 的全限定类名 -->
<mapper namespace="cn.sea.dao.UserDAO">

    <!-- 添加用户 -->
    <insert id="save" parameterType="cn.sea.entity.User" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO `t_user` VALUES(#{id}, #{username}, #{password}, #{salt})
    </insert>

    <!-- 根据用户名查找用户 -->
    <select id="findByUsername" parameterType="string" resultType="cn.sea.entity.User">
        SELECT `id`,`username`,`password`,`salt` FROM `t_user`
        WHERE `username` LIKE #{username}
    </select>


    <!-- 根据用户名（唯一标识）查询用户所有角色信息  一对多 -->
    <select id="findRolesByUsername" parameterType="string" resultMap="user_role_map">
        SELECT u.id uid, u.username, r.id rid, r.rolename
        FROM `t_user` u
        LEFT JOIN `t_user_role` ur
        ON u.id = ur.userid
        LEFT JOIN `t_role` r
        ON ur.roleid = r.id
        WHERE u.username = #{username}
    </select>
    
    <resultMap id="user_role_map" type="cn.sea.entity.User">
        <id column="uid" property="id"/>
        <result column="username" property="username"/>
        <!-- 角色信息
            property: Role集合 在 User 实体类中的属性名
            javaType：Role集合 在 User 实体类中的数据类型，可不写
            ofType：对应的实体类
        -->
        <collection property="roles" javaType="list" ofType="cn.sea.entity.Role">
            <id property="id" column="rid" />
            <result property="rolename" column="rolename"/>
        </collection>
    </resultMap>

</mapper>